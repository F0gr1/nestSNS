// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  username  String   @unique
  bio       String?
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts    Post[]
  comments Comment[]
  likes    Like[]

  followers Follow[] @relation("follower")
  following Follow[] @relation("following")

  @@map("users")
}

model Post {
  id        String   @id @default(uuid())
  content   String
  images    String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  comments Comment[]
  likes    Like[]

  @@map("posts")
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  post   Post   @relation(fields: [postId], references: [id])
  postId String

  @@map("comments")
}

model Like {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  post   Post   @relation(fields: [postId], references: [id])
  postId String

  @@unique([userId, postId])
  @@map("likes")
}

model Follow {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  follower    User   @relation("follower", fields: [followerId], references: [id])
  followerId  String

  following   User   @relation("following", fields: [followingId], references: [id])
  followingId String

  @@unique([followerId, followingId])
  @@map("follows")
}
